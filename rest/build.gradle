plugins {
    id 'java-library'
}

group = 'io.github.thxno'
version = '1.0.0-snapshot'

repositories {
    mavenCentral()
}

task fatJar(type: Jar) {
    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    duplicatesStrategy(DuplicatesStrategy.WARN)
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

dependencies {
    implementation fileTree(dir: 'libs', includes: ['*.jar'])
    implementation 'org.projectlombok:lombok:1.18.20'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.0.0'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    implementation 'org.eclipse.jetty:jetty-servlet:11.0.7'
    implementation 'org.eclipse.jetty:jetty-server:11.0.7'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'javax.inject:javax.inject:1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'

    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testImplementation 'io.github.thxno:fusheng-runner:1.0'
    testImplementation 'io.rest-assured:rest-assured:4.4.0'
    testImplementation 'org.assertj:assertj-core:3.20.2'

}

tasks.named('test') {
    useJUnitPlatform()
}
